partnerRouter.route('/')
.all((req, res, next) => {
    res.status = 200;
    res.setHeader('Content-Type', 'text/plain');
    next();
})

.get((req, res) => {
    res.end('Will send all partners to you')
})

.post( (req, res) => {
    res.statusCode = 403;
    res.end(`Will add the partner: ${req.body.name} with description: ${req.body.description}`);
})

.put( (req, res) => {
    res.statusCode= 403;
    res.end('PUT operation not supported for /partners')
})

.delete( (req, res) => {
    res.end('Deleting all partners')
});


partnerRouter.route('/:partnerId')
.all((req, res, next) => {
    res.status = 200;
    res.setHeader('Content-Type', 'text/plain');
    next();
})

.get((req, res) => {
    res.end(`Will send info for partner ${req.params.partnerId} to you`)
})

.post( (req, res) => {
    res.statusCode = 403;
    res.end(`POST operation not supported on /partners/${req.params.partnerId}`);
})

.put( (req, res) => {
    res.write(`Updating the partner: ${req.params.partnerId}\n`)
    res.end(`Will update the partner: ${req.body.name} with description: ${req.body.description}`);
})

.delete( (req, res) => {
    res.end(`Deleting the partner ${req.params.partnerId}`)
});


promotionRouter.route('/')
.all((req, res, next) => {
    res.status = 200;
    res.setHeader('Content-Type', 'text/plain');
    next();
})

.get((req, res) => {
    res.end('Will send all promotions to you')
})

.post( (req, res) => {
    res.statusCode = 403;
    res.end(`Will add the promotion: ${req.body.name} with description: ${req.body.description}`);
})

.put( (req, res) => {
    res.statusCode= 403;
    res.end('PUT operation not supported for /promotions')
})

.delete( (req, res) => {
    res.end('Deleting all promotions')
});


promotionRouter.route('/:promotionId')
.all((req, res, next) => {
    res.status = 200;
    res.setHeader('Content-Type', 'text/plain');
    next();
})

.get((req, res) => {
    res.end(`Will send info for promotion ${req.params.promotionId} to you`)
})

.post( (req, res) => {
    res.statusCode = 403;
    res.end(`POST operation not supported on /promotions/${req.params.promotionId}`);
})

.put( (req, res) => {
    res.write(`Updating the promotion: ${req.params.promotionId}\n`)
    res.end(`Will update the promotion: ${req.body.name} with description: ${req.body.description}`);
})

.delete( (req, res) => {
    res.end(`Deleting the promotion ${req.params.promotionId}`)
});